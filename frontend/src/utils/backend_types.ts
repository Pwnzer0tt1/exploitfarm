/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/setup": {
    /**
     * Set Status
     * @description Set some configuration values, you can set the values to change only
     */
    post: operations["set_status_api_setup_post"];
  };
  "/api/submitters": {
    /**
     * Get Submitters
     * @description Get all the submitters
     */
    get: operations["get_submitters_api_submitters_get"];
    /**
     * New Submitter
     * @description Set the submitter code
     */
    post: operations["new_submitter_api_submitters_post"];
  };
  "/api/submitters/{submitter_id}": {
    /** Update Submitter */
    put: operations["update_submitter_api_submitters__submitter_id__put"];
    /**
     * Delete Submitter
     * @description Delete a submitter
     */
    delete: operations["delete_submitter_api_submitters__submitter_id__delete"];
  };
  "/api/submitters/{submitter_id}/test": {
    /**
     * Test Submitter
     * @description Test the submitter (Flags will not be stored in the database)
     */
    post: operations["test_submitter_api_submitters__submitter_id__test_post"];
  };
  "/api/services": {
    /** Service Get */
    get: operations["service_get_api_services_get"];
    /** Service New */
    post: operations["service_new_api_services_post"];
  };
  "/api/services/{service_id}": {
    /** Service Edit */
    put: operations["service_edit_api_services__service_id__put"];
    /** Service Delete */
    delete: operations["service_delete_api_services__service_id__delete"];
  };
  "/api/exploits": {
    /** Exploits Get */
    get: operations["exploits_get_api_exploits_get"];
    /** Exploit New Or Edit */
    post: operations["exploit_new_or_edit_api_exploits_post"];
  };
  "/api/exploits/{exploit_id}": {
    /** Exploit Edit */
    put: operations["exploit_edit_api_exploits__exploit_id__put"];
    /** Exploit Delete Hashed Or Uuid */
    delete: operations["exploit_delete_hashed_or_uuid_api_exploits__exploit_id__delete"];
  };
  "/api/exploits/{exploit_id}/submit": {
    /** Exploit Submit */
    post: operations["exploit_submit_api_exploits__exploit_id__submit_post"];
  };
  "/api/exploits/submit": {
    /** Exploit Submit */
    post: operations["exploit_submit_api_exploits_submit_post"];
  };
  "/api/flags": {
    /** Get Flags */
    get: operations["get_flags_api_flags_get"];
  };
  "/api/flags/attacks": {
    /** Get Attacks */
    get: operations["get_attacks_api_flags_attacks_get"];
  };
  "/api/teams": {
    /** Team Get */
    get: operations["team_get_api_teams_get"];
    /** Team Edit List */
    put: operations["team_edit_list_api_teams_put"];
    /** Team New */
    post: operations["team_new_api_teams_post"];
  };
  "/api/teams/delete": {
    /** Team Delete List */
    post: operations["team_delete_list_api_teams_delete_post"];
  };
  "/api/teams/{team_id}": {
    /** Team Delete */
    delete: operations["team_delete_api_teams__team_id__delete"];
  };
  "/api/clients": {
    /** Service Get */
    get: operations["service_get_api_clients_get"];
    /** Service New Or Edit */
    post: operations["service_new_or_edit_api_clients_post"];
  };
  "/api/clients/{client_id}": {
    /** Service Edit */
    put: operations["service_edit_api_clients__client_id__put"];
    /** Service Delete Hashed Or Uuid */
    delete: operations["service_delete_hashed_or_uuid_api_clients__client_id__delete"];
  };
  "/api/login": {
    /**
     * Login Api
     * @description Get a login token to use the apis
     */
    post: operations["login_api_api_login_post"];
  };
  "/api/status": {
    /**
     * Get Status
     * @description This will return the application status, and the configuration if the user is allowed to see it
     */
    get: operations["get_status_api_status_get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** AttackExecutionDTO */
    AttackExecutionDTO: {
      id: components["schemas"]["AttackExecutionID"];
      /** Start Time */
      start_time?: string | null;
      /** End Time */
      end_time?: string | null;
      status: components["schemas"]["AttackExecutionStatus"];
      /** Error */
      error: string | null;
      /**
       * Recieved At
       * Format: date-time
       */
      recieved_at: string;
      /**
       * @default [
       *   null
       * ]
       */
      target?: components["schemas"]["FkType_TeamID_"] | null;
      exploit?: components["schemas"]["FkType_ExploitID_"] | null;
      executed_by?: components["schemas"]["FkType_ClientID_"] | null;
      flags: number[];
    };
    AttackExecutionID: number;
    /**
     * AttackExecutionStatus
     * @enum {string}
     */
    AttackExecutionStatus: "done" | "noflags" | "crashed";
    /**
     * AttackMode
     * @enum {string}
     */
    AttackMode: "wait-for-time-tick" | "tick-delay" | "loop-delay";
    /** Body_login_api_api_login_post */
    Body_login_api_api_login_post: {
      /** Grant Type */
      grant_type?: string | null;
      /** Username */
      username: string;
      /** Password */
      password: string;
      /**
       * Scope
       * @default
       */
      scope?: string;
      /** Client Id */
      client_id?: string | null;
      /** Client Secret */
      client_secret?: string | null;
    };
    /** ClientAddForm */
    ClientAddForm: {
      id: components["schemas"]["UnHashedClientID"];
      /** Name */
      name?: string | null;
    };
    /** ClientDTO */
    ClientDTO: {
      id: components["schemas"]["ClientID"];
      /** Name */
      name?: string | null;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
    };
    /** ClientEditForm */
    ClientEditForm: {
      /** Name */
      name?: string | null;
    };
    ClientID: string;
    /** Configuration */
    Configuration: {
      /**
       * Flag Regex
       * @default
       */
      FLAG_REGEX?: string;
      /** Start Time */
      START_TIME?: string | null;
      /** End Time */
      END_TIME?: string | null;
      /**
       * Tick Duration
       * @default 120
       */
      TICK_DURATION?: number;
      /** @default tick-delay */
      ATTACK_MODE?: components["schemas"]["AttackMode"];
      /**
       * Loop Attack Delay
       * @default 0
       */
      LOOP_ATTACK_DELAY?: number;
      /**
       * Attack Time Tick Delay
       * @default 0
       */
      ATTACK_TIME_TICK_DELAY?: number;
      /** Flag Timeout */
      FLAG_TIMEOUT?: number | null;
      /** Flag Submit Limit */
      FLAG_SUBMIT_LIMIT?: number | null;
      /**
       * Submit Delay
       * @default 0
       */
      SUBMIT_DELAY?: number;
      SUBMITTER?: components["schemas"]["SubmitterID"] | null;
      /**
       * Submitter Timeout
       * @default 30
       */
      SUBMITTER_TIMEOUT?: number | null;
      /**
       * Authentication Required
       * @default false
       */
      AUTHENTICATION_REQUIRED?: boolean;
      /** Password Hash */
      PASSWORD_HASH?: string | null;
      /** @default setup */
      SETUP_STATUS?: components["schemas"]["SetupStatus"];
    };
    /** CustomPage[AttackExecutionDTO] */
    CustomPage_AttackExecutionDTO_: {
      /** Items */
      items: components["schemas"]["AttackExecutionDTO"][];
      /** Total */
      total: number | null;
      /** Page */
      page: number | null;
      /** Size */
      size: number | null;
      /** Pages */
      pages?: number | null;
    };
    /** CustomPage[FlagDTO] */
    CustomPage_FlagDTO_: {
      /** Items */
      items: components["schemas"]["FlagDTO"][];
      /** Total */
      total: number | null;
      /** Page */
      page: number | null;
      /** Size */
      size: number | null;
      /** Pages */
      pages?: number | null;
    };
    /** ExploitAddForm */
    ExploitAddForm: {
      id: components["schemas"]["ExploitID"];
      /** Name */
      name: string;
      /** @default other */
      language?: components["schemas"]["Language"];
      service: components["schemas"]["ServiceID"];
      created_by: components["schemas"]["UnHashedClientID"];
    };
    /** ExploitDTO */
    ExploitDTO: {
      id: components["schemas"]["ExploitID"];
      /** Name */
      name: string;
      language: components["schemas"]["Language"];
      status?: components["schemas"]["ExploitStatus"] | null;
      /**
       * Last Upadte
       * Format: date-time
       */
      last_upadte: string;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      service: components["schemas"]["FkType_ServiceID_"];
      created_by: components["schemas"]["FkType_ClientID_"];
      last_execution_by?: components["schemas"]["FkType_ClientID_"] | null;
    };
    /** ExploitEditForm */
    ExploitEditForm: {
      /** Name */
      name?: string | null;
      language?: components["schemas"]["Language"] | null;
      service?: components["schemas"]["ServiceID"] | null;
      created_by?: components["schemas"]["UnHashedClientID"] | null;
    };
    /** Format: uuid */
    ExploitID: string;
    /**
     * ExploitStatus
     * @enum {string}
     */
    ExploitStatus: "active" | "disabled";
    /** ExploitSubmitForm */
    ExploitSubmitForm: {
      /** Start Time */
      start_time?: string | null;
      /** End Time */
      end_time?: string | null;
      status: components["schemas"]["AttackExecutionStatus"];
      /** Error */
      error?: string | null;
      executed_by?: components["schemas"]["UnHashedClientID"] | null;
      target?: components["schemas"]["TeamID"] | null;
      /** Flags */
      flags: string[];
    };
    FkType_ClientID_: string;
    FkType_ExploitID_: string;
    FkType_ServiceID_: string;
    FkType_TeamID_: number;
    /** FlagDTO */
    FlagDTO: {
      id: components["schemas"]["FlagID"];
      /** Flag */
      flag: string;
      status: components["schemas"]["FlagStatus"];
      /** Last Submission At */
      last_submission_at: string | null;
      /** Status Text */
      status_text?: string | null;
      /**
       * Submit Attempts
       * @default 0
       */
      submit_attempts?: number;
      attack: components["schemas"]["FlagDTOAttackDetails"];
    };
    /** FlagDTOAttackDetails */
    FlagDTOAttackDetails: {
      id: components["schemas"]["AttackExecutionID"];
      /** Start Time */
      start_time?: string | null;
      /** End Time */
      end_time?: string | null;
      status: components["schemas"]["AttackExecutionStatus"];
      /**
       * Recieved At
       * Format: date-time
       */
      recieved_at: string;
      /**
       * @default [
       *   null
       * ]
       */
      target?: components["schemas"]["FkType_TeamID_"] | null;
      exploit?: components["schemas"]["FkType_ExploitID_"] | null;
      executed_by?: components["schemas"]["FkType_ClientID_"] | null;
    };
    FlagID: number;
    /**
     * FlagStatus
     * @enum {string}
     */
    FlagStatus: "ok" | "wait" | "timeout" | "invalid";
    /**
     * Language
     * @enum {string}
     */
    Language: "python" | "java" | "javascript" | "typescript" | "c#" | "c++" | "php" | "r" | "kotlin" | "go" | "ruby" | "rust" | "lua" | "dart" | "perl" | "haskell" | "other";
    /** ManualSubmitForm */
    ManualSubmitForm: {
      /** Flags */
      flags?: string[] | null;
      /** Output */
      output?: string | null;
    };
    /** MessageInfo */
    MessageInfo: {
      /** @default warning */
      level?: components["schemas"]["MessageStatusLevel"];
      /** Title */
      title: string;
      /** Message */
      message: string;
    };
    /** MessageResponse */
    MessageResponse: {
      /** @default ok */
      status?: components["schemas"]["ResponseStatus"];
      /** Message */
      message?: string | null;
      response?: components["schemas"]["MessageResponse"] | null;
    };
    /** MessageResponse[Any] */
    MessageResponse_Any_: {
      /** @default ok */
      status?: components["schemas"]["ResponseStatus"];
      /** Message */
      message?: string | null;
      /** Response */
      response?: unknown;
    };
    /** MessageResponse[ClientDTO] */
    MessageResponse_ClientDTO_: {
      /** @default ok */
      status?: components["schemas"]["ResponseStatus"];
      /** Message */
      message?: string | null;
      response?: components["schemas"]["ClientDTO"] | null;
    };
    /** MessageResponse[Configuration] */
    MessageResponse_Configuration_: {
      /** @default ok */
      status?: components["schemas"]["ResponseStatus"];
      /** Message */
      message?: string | null;
      response?: components["schemas"]["Configuration"] | null;
    };
    /** MessageResponse[Dict[str, Any]] */
    MessageResponse_Dict_str__Any__: {
      /** @default ok */
      status?: components["schemas"]["ResponseStatus"];
      /** Message */
      message?: string | null;
      /** Response */
      response?: Record<string, never> | null;
    };
    /** MessageResponse[Dict[str, int]] */
    MessageResponse_Dict_str__int__: {
      /** @default ok */
      status?: components["schemas"]["ResponseStatus"];
      /** Message */
      message?: string | null;
      /** Response */
      response?: {
        [key: string]: number;
      } | null;
    };
    /** MessageResponse[ExploitDTO] */
    MessageResponse_ExploitDTO_: {
      /** @default ok */
      status?: components["schemas"]["ResponseStatus"];
      /** Message */
      message?: string | null;
      response?: components["schemas"]["ExploitDTO"] | null;
    };
    /** MessageResponse[ServiceDTO] */
    MessageResponse_ServiceDTO_: {
      /** @default ok */
      status?: components["schemas"]["ResponseStatus"];
      /** Message */
      message?: string | null;
      response?: components["schemas"]["ServiceDTO"] | null;
    };
    /** MessageResponse[SubmitterDTO] */
    MessageResponse_SubmitterDTO_: {
      /** @default ok */
      status?: components["schemas"]["ResponseStatus"];
      /** Message */
      message?: string | null;
      response?: components["schemas"]["SubmitterDTO"] | null;
    };
    /**
     * MessageStatusLevel
     * @enum {string}
     */
    MessageStatusLevel: "info" | "warning" | "error";
    /**
     * ResponseStatus
     * @enum {string}
     */
    ResponseStatus: "ok" | "error" | "invalid";
    /** ServiceAddForm */
    ServiceAddForm: {
      /** Name */
      name: string;
    };
    /** ServiceDTO */
    ServiceDTO: {
      id: components["schemas"]["ServiceID"];
      /** Name */
      name: string;
    };
    /** ServiceEditForm */
    ServiceEditForm: {
      /** Name */
      name?: string | null;
    };
    /** Format: uuid */
    ServiceID: string;
    /**
     * SetupStatus
     * @enum {string}
     */
    SetupStatus: "setup" | "running";
    /** StatusAPI */
    StatusAPI: {
      status: components["schemas"]["SetupStatus"];
      /** Loggined */
      loggined: boolean;
      /** Server Id */
      server_id: string;
      config?: components["schemas"]["Configuration"] | null;
      /**
       * Server Time
       * Format: date-time
       */
      server_time: string;
      submitter?: components["schemas"]["SubmitterDTO"] | null;
      /** Teams */
      teams?: components["schemas"]["TeamDTO"][] | null;
      /** Messages */
      messages: components["schemas"]["MessageInfo"][] | null;
      /** Services */
      services: components["schemas"]["ServiceDTO"][] | null;
      /** Start Time */
      start_time?: string | null;
      /** End Time */
      end_time?: string | null;
      /**
       * Version
       * @default {{VERSION_PLACEHOLDER}}
       */
      version?: string;
      /**
       * Whoami
       * @default exploitfarm
       */
      whoami?: string;
    };
    /** SubmitterAddForm */
    SubmitterAddForm: {
      /**
       * Name
       * @default
       */
      name?: string;
      /** Code */
      code: string;
      /** Kargs */
      kargs?: Record<string, never> | null;
    };
    /** SubmitterDTO */
    SubmitterDTO: {
      id: components["schemas"]["SubmitterID"];
      /** Name */
      name: string;
      /** Code */
      code: string;
      /**
       * Kargs
       * @default {}
       */
      kargs?: {
        [key: string]: Record<string, never>;
      };
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
    };
    /** SubmitterEditForm */
    SubmitterEditForm: {
      /** Name */
      name?: string | null;
      /** Kargs */
      kargs?: Record<string, never> | null;
    };
    SubmitterID: number;
    /** TeamAddForm */
    TeamAddForm: {
      /** Name */
      name?: string | null;
      /** Short Name */
      short_name?: string | null;
      /** Host */
      host: string;
    };
    /** TeamDTO */
    TeamDTO: {
      id: components["schemas"]["TeamID"];
      /** Name */
      name: string | null;
      /** Short Name */
      short_name: string | null;
      /** Host */
      host: string;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
    };
    /** TeamEditForm */
    TeamEditForm: {
      id: components["schemas"]["TeamID"];
      /** Name */
      name?: string | null;
      /** Short Name */
      short_name?: string | null;
      /** Host */
      host?: string | null;
    };
    TeamID: number;
    UnHashedClientID: string;
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Set Status
   * @description Set some configuration values, you can set the values to change only
   */
  set_status_api_setup_post: {
    requestBody: {
      content: {
        "application/json": {
          [key: string]: string | number | null;
        };
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Configuration_"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /**
   * Get Submitters
   * @description Get all the submitters
   */
  get_submitters_api_submitters_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SubmitterDTO"][];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /**
   * New Submitter
   * @description Set the submitter code
   */
  new_submitter_api_submitters_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SubmitterAddForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse_SubmitterDTO_"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Update Submitter */
  update_submitter_api_submitters__submitter_id__put: {
    parameters: {
      path: {
        submitter_id: components["schemas"]["SubmitterID"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SubmitterEditForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse_SubmitterDTO_"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /**
   * Delete Submitter
   * @description Delete a submitter
   */
  delete_submitter_api_submitters__submitter_id__delete: {
    parameters: {
      path: {
        submitter_id: components["schemas"]["SubmitterID"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse_SubmitterDTO_"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /**
   * Test Submitter
   * @description Test the submitter (Flags will not be stored in the database)
   */
  test_submitter_api_submitters__submitter_id__test_post: {
    parameters: {
      path: {
        submitter_id: components["schemas"]["SubmitterID"];
      };
    };
    requestBody: {
      content: {
        "application/json": string[];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Dict_str__Any__"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Service Get */
  service_get_api_services_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ServiceDTO"][];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Service New */
  service_new_api_services_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServiceAddForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse_ServiceDTO_"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Service Edit */
  service_edit_api_services__service_id__put: {
    parameters: {
      path: {
        service_id: components["schemas"]["ServiceID"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServiceEditForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse_ServiceDTO_"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Service Delete */
  service_delete_api_services__service_id__delete: {
    parameters: {
      path: {
        service_id: components["schemas"]["ServiceID"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse_ServiceDTO_"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Exploits Get */
  exploits_get_api_exploits_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ExploitDTO"][];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Exploit New Or Edit */
  exploit_new_or_edit_api_exploits_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ExploitAddForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse_ExploitDTO_"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Exploit Edit */
  exploit_edit_api_exploits__exploit_id__put: {
    parameters: {
      path: {
        exploit_id: components["schemas"]["ExploitID"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ExploitEditForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse_ExploitDTO_"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Exploit Delete Hashed Or Uuid */
  exploit_delete_hashed_or_uuid_api_exploits__exploit_id__delete: {
    parameters: {
      path: {
        exploit_id: components["schemas"]["ExploitID"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse_ExploitDTO_"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Exploit Submit */
  exploit_submit_api_exploits__exploit_id__submit_post: {
    parameters: {
      path: {
        exploit_id: components["schemas"]["ExploitID"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ExploitSubmitForm"][];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Dict_str__int__"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Exploit Submit */
  exploit_submit_api_exploits_submit_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManualSubmitForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Dict_str__int__"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Get Flags */
  get_flags_api_flags_get: {
    parameters: {
      query?: {
        /** @description Flag status */
        flag_status?: components["schemas"]["FlagStatus"] | null;
        /** @description Attack status */
        attack_status?: components["schemas"]["AttackExecutionStatus"] | null;
        /** @description Target team */
        target?: components["schemas"]["TeamID"] | null;
        /** @description Exploit */
        exploit?: components["schemas"]["ExploitID"] | null;
        /** @description Client */
        executed_by?: components["schemas"]["UnHashedClientID"] | components["schemas"]["ClientID"] | null;
        /** @description Reverse order */
        reversed?: boolean;
        /** @description Page number */
        page?: number;
        /** @description Page size */
        size?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CustomPage_FlagDTO_"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Get Attacks */
  get_attacks_api_flags_attacks_get: {
    parameters: {
      query?: {
        /** @description Attack status */
        status?: components["schemas"]["AttackExecutionStatus"] | null;
        /** @description Target team */
        target?: components["schemas"]["TeamID"] | null;
        /** @description Exploit */
        exploit?: components["schemas"]["ExploitID"] | null;
        /** @description Client */
        executed_by?: components["schemas"]["UnHashedClientID"] | components["schemas"]["ClientID"] | null;
        /** @description Reverse order */
        reversed?: boolean;
        /** @description Page number */
        page?: number;
        /** @description Page size */
        size?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CustomPage_AttackExecutionDTO_"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Team Get */
  team_get_api_teams_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["TeamDTO"][];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Team Edit List */
  team_edit_list_api_teams_put: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TeamEditForm"][];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Team New */
  team_new_api_teams_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TeamAddForm"][];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Team Delete List */
  team_delete_list_api_teams_delete_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TeamID"][];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Team Delete */
  team_delete_api_teams__team_id__delete: {
    parameters: {
      path: {
        team_id: components["schemas"]["TeamID"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Service Get */
  service_get_api_clients_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ClientDTO"][];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Service New Or Edit */
  service_new_or_edit_api_clients_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ClientAddForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse_ClientDTO_"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Service Edit */
  service_edit_api_clients__client_id__put: {
    parameters: {
      path: {
        client_id: components["schemas"]["UnHashedClientID"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ClientEditForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse_ClientDTO_"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /** Service Delete Hashed Or Uuid */
  service_delete_hashed_or_uuid_api_clients__client_id__delete: {
    parameters: {
      path: {
        client_id: components["schemas"]["ClientID"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MessageResponse"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /**
   * Login Api
   * @description Get a login token to use the apis
   */
  login_api_api_login_post: {
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["Body_login_api_api_login_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
  /**
   * Get Status
   * @description This will return the application status, and the configuration if the user is allowed to see it
   */
  get_status_api_status_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StatusAPI"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["MessageResponse_Any_"];
        };
      };
    };
  };
}
